<?xml version="1.0" encoding="GBK"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 设置连接数据库的驱动、URL、用户名、密码
		连接池最大连接数、最小连接数、初始连接数等参数 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
		p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://127.0.0.1:3307/gift?useUnicode=true&amp;characterEncoding=UTF-8"
		p:user="root"
		p:password="root"
		p:maxPoolSize="40"
		p:minPoolSize="1"
		p:initialPoolSize="1"
		p:maxIdleTime="20"/>

	<!-- 定义Hibernate的SessionFactory -->
	<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
			   <value>domain/Item.hbm.xml</value>
			   <value>domain/Price.hbm.xml</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表
				是否生成SQL语句等 	-->
			<value>
			hibernate.dialect=org.hibernate.dialect.MySQLDialect<!--MySQLInnoDBDialect-->
			hibernate.hbm2ddl.auto=update
			hibernate.show_sql=true
			hibernate.format_sql=true
			#关闭二级缓存
			hibernate.cache.use_second_level_cache=false
			#设置二级缓存的提供者
			<!--hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider-->
			hibernate.connection.autocommit=true
			</value>
		</property>
	</bean>

	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
	<!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现-->
	<!-- 并注入SessionFactory的引用 -->
	<bean id="transactionManager" class=
		"org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" /> 
	</bean>

	<!-- 配置事务增强处理Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true"/>
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="false" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

   
	<bean id="Item" class="action.ItemAction" scope="prototype">
		 <property name="itemManager" ref="itemManager"></property> 
		 <property name="priceManager" ref="priceManager"></property>
	</bean>
	
	<!-- 定义业务逻辑组件模板 -->
	<!-- 为之注入DAO组件 -->
	<bean id="managerTemplate" abstract="true" lazy-init="true"
		p:userDao-ref="userDao"
        p:itemDao-ref="itemDao"
        p:priceDao-ref="priceDao"/>

	<!-- 定义两个业务逻辑组件，继承业务逻辑组件的模板 -->
	<bean id="userManager"
		class="service.UserManagerImpl"
		parent="managerTemplate"/>
			
	<bean id="itemManager"
		class="service.ItemManagerImpl"
		parent="managerTemplate"/>
		
	<bean id="priceManager" 
	    class="service.PriceManagerImp"
	    parent="managerTemplate"/>
	

	

</beans>